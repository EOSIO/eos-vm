#include <algorithm>
#include <vector>
#include <iterator>
#include <cstdlib>
#include <iostream>
#include <math.h>

#include <boost/test/unit_test.hpp>
#include <boost/test/framework.hpp>

#include "utils.hpp"

#include <eosio/wasm_backend/backend.hpp>

using namespace eosio;
using namespace eosio::wasm_backend;

extern wasm_allocator wa;

BOOST_AUTO_TEST_SUITE(i64_spec_tests)

BOOST_AUTO_TEST_CASE(i64_tests) {
   try {
      auto code = backend::read_wasm( "wasms/i64.wasm" );
      backend bkend( code, wa );

      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("add", (uint64_t)1, (uint64_t)1)), (uint64_t)2);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("add", (uint64_t)1, (uint64_t)0)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("add", (uint64_t)-1, (uint64_t)-1)), (uint64_t)-2);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("add", (uint64_t)-1, (uint64_t)1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("add", (uint64_t)0x7fffffffffffffff, (uint64_t)1)), (uint64_t)0x8000000000000000);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("add", (uint64_t)0x8000000000000000, (uint64_t)-1)), (uint64_t)0x7fffffffffffffff);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("add", (uint64_t)0x8000000000000000, (uint64_t)0x8000000000000000)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("add", (uint64_t)0x3fffffff, (uint64_t)1)), (uint64_t)0x40000000);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("sub", (uint64_t)1, (uint64_t)1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("sub", (uint64_t)1, (uint64_t)0)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("sub", (uint64_t)-1, (uint64_t)-1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("sub", (uint64_t)0x7fffffffffffffff, (uint64_t)-1)), (uint64_t)0x8000000000000000);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("sub", (uint64_t)0x8000000000000000, (uint64_t)1)), (uint64_t)0x7fffffffffffffff);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("sub", (uint64_t)0x8000000000000000, (uint64_t)0x8000000000000000)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("sub", (uint64_t)0x3fffffff, (uint64_t)-1)), (uint64_t)0x40000000);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("mul", (uint64_t)1, (uint64_t)1)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("mul", (uint64_t)1, (uint64_t)0)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("mul", (uint64_t)-1, (uint64_t)-1)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("mul", (uint64_t)0x1000000000000000, (uint64_t)4096)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("mul", (uint64_t)0x8000000000000000, (uint64_t)0)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("mul", (uint64_t)0x8000000000000000, (uint64_t)-1)), (uint64_t)0x8000000000000000);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("mul", (uint64_t)0x7fffffffffffffff, (uint64_t)-1)), (uint64_t)0x8000000000000001);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("mul", (uint64_t)0x0123456789abcdef, (uint64_t)0xfedcba9876543210)), (uint64_t)0x2236d88fe5618cf0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("mul", (uint64_t)0x7fffffffffffffff, (uint64_t)0x7fffffffffffffff)), (uint64_t)1);
      BOOST_CHECK_THROW(bkend("div_s", (uint64_t)1, (uint64_t)0), eosio::wasm_backend::wasm_interpreter_exception);
      BOOST_CHECK_THROW(bkend("div_s", (uint64_t)0, (uint64_t)0), eosio::wasm_backend::wasm_interpreter_exception);
      BOOST_CHECK_THROW(bkend("div_s", (uint64_t)0x8000000000000000, (uint64_t)-1), eosio::wasm_backend::wasm_interpreter_exception);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("div_s", (uint64_t)1, (uint64_t)1)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("div_s", (uint64_t)0, (uint64_t)1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("div_s", (uint64_t)0, (uint64_t)-1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("div_s", (uint64_t)-1, (uint64_t)-1)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("div_s", (uint64_t)0x8000000000000000, (uint64_t)2)), (uint64_t)0xc000000000000000);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("div_s", (uint64_t)0x8000000000000001, (uint64_t)1000)), (uint64_t)0xffdf3b645a1cac09);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("div_s", (uint64_t)5, (uint64_t)2)), (uint64_t)2);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("div_s", (uint64_t)-5, (uint64_t)2)), (uint64_t)-2);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("div_s", (uint64_t)5, (uint64_t)-2)), (uint64_t)-2);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("div_s", (uint64_t)-5, (uint64_t)-2)), (uint64_t)2);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("div_s", (uint64_t)7, (uint64_t)3)), (uint64_t)2);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("div_s", (uint64_t)-7, (uint64_t)3)), (uint64_t)-2);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("div_s", (uint64_t)7, (uint64_t)-3)), (uint64_t)-2);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("div_s", (uint64_t)-7, (uint64_t)-3)), (uint64_t)2);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("div_s", (uint64_t)11, (uint64_t)5)), (uint64_t)2);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("div_s", (uint64_t)17, (uint64_t)7)), (uint64_t)2);
      BOOST_CHECK_THROW(bkend("div_u", (uint64_t)1, (uint64_t)0), eosio::wasm_backend::wasm_interpreter_exception);
      BOOST_CHECK_THROW(bkend("div_u", (uint64_t)0, (uint64_t)0), eosio::wasm_backend::wasm_interpreter_exception);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("div_u", (uint64_t)1, (uint64_t)1)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("div_u", (uint64_t)0, (uint64_t)1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("div_u", (uint64_t)-1, (uint64_t)-1)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("div_u", (uint64_t)0x8000000000000000, (uint64_t)-1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("div_u", (uint64_t)0x8000000000000000, (uint64_t)2)), (uint64_t)0x4000000000000000);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("div_u", (uint64_t)0x8ff00ff00ff00ff0, (uint64_t)0x100000001)), (uint64_t)0x8ff00fef);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("div_u", (uint64_t)0x8000000000000001, (uint64_t)1000)), (uint64_t)0x20c49ba5e353f7);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("div_u", (uint64_t)5, (uint64_t)2)), (uint64_t)2);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("div_u", (uint64_t)-5, (uint64_t)2)), (uint64_t)0x7ffffffffffffffd);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("div_u", (uint64_t)5, (uint64_t)-2)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("div_u", (uint64_t)-5, (uint64_t)-2)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("div_u", (uint64_t)7, (uint64_t)3)), (uint64_t)2);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("div_u", (uint64_t)11, (uint64_t)5)), (uint64_t)2);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("div_u", (uint64_t)17, (uint64_t)7)), (uint64_t)2);
      BOOST_CHECK_THROW(bkend("rem_s", (uint64_t)1, (uint64_t)0), eosio::wasm_backend::wasm_interpreter_exception);
      BOOST_CHECK_THROW(bkend("rem_s", (uint64_t)0, (uint64_t)0), eosio::wasm_backend::wasm_interpreter_exception);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rem_s", (uint64_t)0x7fffffffffffffff, (uint64_t)-1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rem_s", (uint64_t)1, (uint64_t)1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rem_s", (uint64_t)0, (uint64_t)1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rem_s", (uint64_t)0, (uint64_t)-1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rem_s", (uint64_t)-1, (uint64_t)-1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rem_s", (uint64_t)0x8000000000000000, (uint64_t)-1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rem_s", (uint64_t)0x8000000000000000, (uint64_t)2)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rem_s", (uint64_t)0x8000000000000001, (uint64_t)1000)), (uint64_t)-807);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rem_s", (uint64_t)5, (uint64_t)2)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rem_s", (uint64_t)-5, (uint64_t)2)), (uint64_t)-1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rem_s", (uint64_t)5, (uint64_t)-2)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rem_s", (uint64_t)-5, (uint64_t)-2)), (uint64_t)-1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rem_s", (uint64_t)7, (uint64_t)3)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rem_s", (uint64_t)-7, (uint64_t)3)), (uint64_t)-1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rem_s", (uint64_t)7, (uint64_t)-3)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rem_s", (uint64_t)-7, (uint64_t)-3)), (uint64_t)-1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rem_s", (uint64_t)11, (uint64_t)5)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rem_s", (uint64_t)17, (uint64_t)7)), (uint64_t)3);
      BOOST_CHECK_THROW(bkend("rem_u", (uint64_t)1, (uint64_t)0), eosio::wasm_backend::wasm_interpreter_exception);
      BOOST_CHECK_THROW(bkend("rem_u", (uint64_t)0, (uint64_t)0), eosio::wasm_backend::wasm_interpreter_exception);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rem_u", (uint64_t)1, (uint64_t)1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rem_u", (uint64_t)0, (uint64_t)1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rem_u", (uint64_t)-1, (uint64_t)-1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rem_u", (uint64_t)0x8000000000000000, (uint64_t)-1)), (uint64_t)0x8000000000000000);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rem_u", (uint64_t)0x8000000000000000, (uint64_t)2)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rem_u", (uint64_t)0x8ff00ff00ff00ff0, (uint64_t)0x100000001)), (uint64_t)0x80000001);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rem_u", (uint64_t)0x8000000000000001, (uint64_t)1000)), (uint64_t)809);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rem_u", (uint64_t)5, (uint64_t)2)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rem_u", (uint64_t)-5, (uint64_t)2)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rem_u", (uint64_t)5, (uint64_t)-2)), (uint64_t)5);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rem_u", (uint64_t)-5, (uint64_t)-2)), (uint64_t)-5);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rem_u", (uint64_t)7, (uint64_t)3)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rem_u", (uint64_t)11, (uint64_t)5)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rem_u", (uint64_t)17, (uint64_t)7)), (uint64_t)3);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("and", (uint64_t)1, (uint64_t)0)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("and", (uint64_t)0, (uint64_t)1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("and", (uint64_t)1, (uint64_t)1)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("and", (uint64_t)0, (uint64_t)0)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("and", (uint64_t)0x7fffffffffffffff, (uint64_t)0x8000000000000000)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("and", (uint64_t)0x7fffffffffffffff, (uint64_t)-1)), (uint64_t)0x7fffffffffffffff);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("and", (uint64_t)0xf0f0ffff, (uint64_t)0xfffff0f0)), (uint64_t)0xf0f0f0f0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("and", (uint64_t)0xffffffffffffffff, (uint64_t)0xffffffffffffffff)), (uint64_t)0xffffffffffffffff);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("or", (uint64_t)1, (uint64_t)0)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("or", (uint64_t)0, (uint64_t)1)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("or", (uint64_t)1, (uint64_t)1)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("or", (uint64_t)0, (uint64_t)0)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("or", (uint64_t)0x7fffffffffffffff, (uint64_t)0x8000000000000000)), (uint64_t)-1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("or", (uint64_t)0x8000000000000000, (uint64_t)0)), (uint64_t)0x8000000000000000);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("or", (uint64_t)0xf0f0ffff, (uint64_t)0xfffff0f0)), (uint64_t)0xffffffff);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("or", (uint64_t)0xffffffffffffffff, (uint64_t)0xffffffffffffffff)), (uint64_t)0xffffffffffffffff);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("xor", (uint64_t)1, (uint64_t)0)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("xor", (uint64_t)0, (uint64_t)1)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("xor", (uint64_t)1, (uint64_t)1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("xor", (uint64_t)0, (uint64_t)0)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("xor", (uint64_t)0x7fffffffffffffff, (uint64_t)0x8000000000000000)), (uint64_t)-1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("xor", (uint64_t)0x8000000000000000, (uint64_t)0)), (uint64_t)0x8000000000000000);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("xor", (uint64_t)-1, (uint64_t)0x8000000000000000)), (uint64_t)0x7fffffffffffffff);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("xor", (uint64_t)-1, (uint64_t)0x7fffffffffffffff)), (uint64_t)0x8000000000000000);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("xor", (uint64_t)0xf0f0ffff, (uint64_t)0xfffff0f0)), (uint64_t)0x0f0f0f0f);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("xor", (uint64_t)0xffffffffffffffff, (uint64_t)0xffffffffffffffff)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shl", (uint64_t)1, (uint64_t)1)), (uint64_t)2);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shl", (uint64_t)1, (uint64_t)0)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shl", (uint64_t)0x7fffffffffffffff, (uint64_t)1)), (uint64_t)0xfffffffffffffffe);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shl", (uint64_t)0xffffffffffffffff, (uint64_t)1)), (uint64_t)0xfffffffffffffffe);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shl", (uint64_t)0x8000000000000000, (uint64_t)1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shl", (uint64_t)0x4000000000000000, (uint64_t)1)), (uint64_t)0x8000000000000000);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shl", (uint64_t)1, (uint64_t)63)), (uint64_t)0x8000000000000000);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shl", (uint64_t)1, (uint64_t)64)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shl", (uint64_t)1, (uint64_t)65)), (uint64_t)2);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shl", (uint64_t)1, (uint64_t)-1)), (uint64_t)0x8000000000000000);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shl", (uint64_t)1, (uint64_t)0x7fffffffffffffff)), (uint64_t)0x8000000000000000);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shr_s", (uint64_t)1, (uint64_t)1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shr_s", (uint64_t)1, (uint64_t)0)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shr_s", (uint64_t)-1, (uint64_t)1)), (uint64_t)-1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shr_s", (uint64_t)0x7fffffffffffffff, (uint64_t)1)), (uint64_t)0x3fffffffffffffff);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shr_s", (uint64_t)0x8000000000000000, (uint64_t)1)), (uint64_t)0xc000000000000000);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shr_s", (uint64_t)0x4000000000000000, (uint64_t)1)), (uint64_t)0x2000000000000000);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shr_s", (uint64_t)1, (uint64_t)64)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shr_s", (uint64_t)1, (uint64_t)65)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shr_s", (uint64_t)1, (uint64_t)-1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shr_s", (uint64_t)1, (uint64_t)0x7fffffffffffffff)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shr_s", (uint64_t)1, (uint64_t)0x8000000000000000)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shr_s", (uint64_t)0x8000000000000000, (uint64_t)63)), (uint64_t)-1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shr_s", (uint64_t)-1, (uint64_t)64)), (uint64_t)-1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shr_s", (uint64_t)-1, (uint64_t)65)), (uint64_t)-1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shr_s", (uint64_t)-1, (uint64_t)-1)), (uint64_t)-1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shr_s", (uint64_t)-1, (uint64_t)0x7fffffffffffffff)), (uint64_t)-1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shr_s", (uint64_t)-1, (uint64_t)0x8000000000000000)), (uint64_t)-1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shr_u", (uint64_t)1, (uint64_t)1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shr_u", (uint64_t)1, (uint64_t)0)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shr_u", (uint64_t)-1, (uint64_t)1)), (uint64_t)0x7fffffffffffffff);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shr_u", (uint64_t)0x7fffffffffffffff, (uint64_t)1)), (uint64_t)0x3fffffffffffffff);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shr_u", (uint64_t)0x8000000000000000, (uint64_t)1)), (uint64_t)0x4000000000000000);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shr_u", (uint64_t)0x4000000000000000, (uint64_t)1)), (uint64_t)0x2000000000000000);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shr_u", (uint64_t)1, (uint64_t)64)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shr_u", (uint64_t)1, (uint64_t)65)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shr_u", (uint64_t)1, (uint64_t)-1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shr_u", (uint64_t)1, (uint64_t)0x7fffffffffffffff)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shr_u", (uint64_t)1, (uint64_t)0x8000000000000000)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shr_u", (uint64_t)0x8000000000000000, (uint64_t)63)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shr_u", (uint64_t)-1, (uint64_t)64)), (uint64_t)-1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shr_u", (uint64_t)-1, (uint64_t)65)), (uint64_t)0x7fffffffffffffff);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shr_u", (uint64_t)-1, (uint64_t)-1)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shr_u", (uint64_t)-1, (uint64_t)0x7fffffffffffffff)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("shr_u", (uint64_t)-1, (uint64_t)0x8000000000000000)), (uint64_t)-1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rotl", (uint64_t)1, (uint64_t)1)), (uint64_t)2);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rotl", (uint64_t)1, (uint64_t)0)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rotl", (uint64_t)-1, (uint64_t)1)), (uint64_t)-1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rotl", (uint64_t)1, (uint64_t)64)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rotl", (uint64_t)0xabcd987602468ace, (uint64_t)1)), (uint64_t)0x579b30ec048d159d);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rotl", (uint64_t)0xfe000000dc000000, (uint64_t)4)), (uint64_t)0xe000000dc000000f);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rotl", (uint64_t)0xabcd1234ef567809, (uint64_t)53)), (uint64_t)0x013579a2469deacf);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rotl", (uint64_t)0xabd1234ef567809c, (uint64_t)63)), (uint64_t)0x55e891a77ab3c04e);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rotl", (uint64_t)0xabcd1234ef567809, (uint64_t)0xf5)), (uint64_t)0x013579a2469deacf);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rotl", (uint64_t)0xabcd7294ef567809, (uint64_t)0xffffffffffffffed)), (uint64_t)0xcf013579ae529dea);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rotl", (uint64_t)0xabd1234ef567809c, (uint64_t)0x800000000000003f)), (uint64_t)0x55e891a77ab3c04e);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rotl", (uint64_t)1, (uint64_t)63)), (uint64_t)0x8000000000000000);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rotl", (uint64_t)0x8000000000000000, (uint64_t)1)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rotr", (uint64_t)1, (uint64_t)1)), (uint64_t)0x8000000000000000);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rotr", (uint64_t)1, (uint64_t)0)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rotr", (uint64_t)-1, (uint64_t)1)), (uint64_t)-1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rotr", (uint64_t)1, (uint64_t)64)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rotr", (uint64_t)0xabcd987602468ace, (uint64_t)1)), (uint64_t)0x55e6cc3b01234567);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rotr", (uint64_t)0xfe000000dc000000, (uint64_t)4)), (uint64_t)0x0fe000000dc00000);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rotr", (uint64_t)0xabcd1234ef567809, (uint64_t)53)), (uint64_t)0x6891a77ab3c04d5e);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rotr", (uint64_t)0xabd1234ef567809c, (uint64_t)63)), (uint64_t)0x57a2469deacf0139);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rotr", (uint64_t)0xabcd1234ef567809, (uint64_t)0xf5)), (uint64_t)0x6891a77ab3c04d5e);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rotr", (uint64_t)0xabcd7294ef567809, (uint64_t)0xffffffffffffffed)), (uint64_t)0x94a77ab3c04d5e6b);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rotr", (uint64_t)0xabd1234ef567809c, (uint64_t)0x800000000000003f)), (uint64_t)0x57a2469deacf0139);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rotr", (uint64_t)1, (uint64_t)63)), (uint64_t)2);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("rotr", (uint64_t)0x8000000000000000, (uint64_t)63)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("clz", (uint64_t)0xffffffffffffffff)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("clz", (uint64_t)0)), (uint64_t)64);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("clz", (uint64_t)0x00008000)), (uint64_t)48);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("clz", (uint64_t)0xff)), (uint64_t)56);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("clz", (uint64_t)0x8000000000000000)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("clz", (uint64_t)1)), (uint64_t)63);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("clz", (uint64_t)2)), (uint64_t)62);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("clz", (uint64_t)0x7fffffffffffffff)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ctz", (uint64_t)-1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ctz", (uint64_t)0)), (uint64_t)64);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ctz", (uint64_t)0x00008000)), (uint64_t)15);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ctz", (uint64_t)0x00010000)), (uint64_t)16);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ctz", (uint64_t)0x8000000000000000)), (uint64_t)63);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ctz", (uint64_t)0x7fffffffffffffff)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("popcnt", (uint64_t)-1)), (uint64_t)64);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("popcnt", (uint64_t)0)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("popcnt", (uint64_t)0x00008000)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("popcnt", (uint64_t)0x8000800080008000)), (uint64_t)4);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("popcnt", (uint64_t)0x7fffffffffffffff)), (uint64_t)63);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("popcnt", (uint64_t)0xAAAAAAAA55555555)), (uint64_t)32);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("popcnt", (uint64_t)0x99999999AAAAAAAA)), (uint64_t)32);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("popcnt", (uint64_t)0xDEADBEEFDEADBEEF)), (uint64_t)48);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("eqz", (uint64_t)0)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("eqz", (uint64_t)1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("eqz", (uint64_t)0x8000000000000000)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("eqz", (uint64_t)0x7fffffffffffffff)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("eqz", (uint64_t)0xffffffffffffffff)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("eq", (uint64_t)0, (uint64_t)0)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("eq", (uint64_t)1, (uint64_t)1)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("eq", (uint64_t)-1, (uint64_t)1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("eq", (uint64_t)0x8000000000000000, (uint64_t)0x8000000000000000)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("eq", (uint64_t)0x7fffffffffffffff, (uint64_t)0x7fffffffffffffff)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("eq", (uint64_t)-1, (uint64_t)-1)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("eq", (uint64_t)1, (uint64_t)0)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("eq", (uint64_t)0, (uint64_t)1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("eq", (uint64_t)0x8000000000000000, (uint64_t)0)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("eq", (uint64_t)0, (uint64_t)0x8000000000000000)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("eq", (uint64_t)0x8000000000000000, (uint64_t)-1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("eq", (uint64_t)-1, (uint64_t)0x8000000000000000)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("eq", (uint64_t)0x8000000000000000, (uint64_t)0x7fffffffffffffff)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("eq", (uint64_t)0x7fffffffffffffff, (uint64_t)0x8000000000000000)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ne", (uint64_t)0, (uint64_t)0)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ne", (uint64_t)1, (uint64_t)1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ne", (uint64_t)-1, (uint64_t)1)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ne", (uint64_t)0x8000000000000000, (uint64_t)0x8000000000000000)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ne", (uint64_t)0x7fffffffffffffff, (uint64_t)0x7fffffffffffffff)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ne", (uint64_t)-1, (uint64_t)-1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ne", (uint64_t)1, (uint64_t)0)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ne", (uint64_t)0, (uint64_t)1)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ne", (uint64_t)0x8000000000000000, (uint64_t)0)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ne", (uint64_t)0, (uint64_t)0x8000000000000000)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ne", (uint64_t)0x8000000000000000, (uint64_t)-1)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ne", (uint64_t)-1, (uint64_t)0x8000000000000000)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ne", (uint64_t)0x8000000000000000, (uint64_t)0x7fffffffffffffff)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ne", (uint64_t)0x7fffffffffffffff, (uint64_t)0x8000000000000000)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("lt_s", (uint64_t)0, (uint64_t)0)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("lt_s", (uint64_t)1, (uint64_t)1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("lt_s", (uint64_t)-1, (uint64_t)1)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("lt_s", (uint64_t)0x8000000000000000, (uint64_t)0x8000000000000000)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("lt_s", (uint64_t)0x7fffffffffffffff, (uint64_t)0x7fffffffffffffff)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("lt_s", (uint64_t)-1, (uint64_t)-1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("lt_s", (uint64_t)1, (uint64_t)0)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("lt_s", (uint64_t)0, (uint64_t)1)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("lt_s", (uint64_t)0x8000000000000000, (uint64_t)0)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("lt_s", (uint64_t)0, (uint64_t)0x8000000000000000)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("lt_s", (uint64_t)0x8000000000000000, (uint64_t)-1)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("lt_s", (uint64_t)-1, (uint64_t)0x8000000000000000)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("lt_s", (uint64_t)0x8000000000000000, (uint64_t)0x7fffffffffffffff)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("lt_s", (uint64_t)0x7fffffffffffffff, (uint64_t)0x8000000000000000)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("lt_u", (uint64_t)0, (uint64_t)0)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("lt_u", (uint64_t)1, (uint64_t)1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("lt_u", (uint64_t)-1, (uint64_t)1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("lt_u", (uint64_t)0x8000000000000000, (uint64_t)0x8000000000000000)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("lt_u", (uint64_t)0x7fffffffffffffff, (uint64_t)0x7fffffffffffffff)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("lt_u", (uint64_t)-1, (uint64_t)-1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("lt_u", (uint64_t)1, (uint64_t)0)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("lt_u", (uint64_t)0, (uint64_t)1)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("lt_u", (uint64_t)0x8000000000000000, (uint64_t)0)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("lt_u", (uint64_t)0, (uint64_t)0x8000000000000000)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("lt_u", (uint64_t)0x8000000000000000, (uint64_t)-1)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("lt_u", (uint64_t)-1, (uint64_t)0x8000000000000000)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("lt_u", (uint64_t)0x8000000000000000, (uint64_t)0x7fffffffffffffff)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("lt_u", (uint64_t)0x7fffffffffffffff, (uint64_t)0x8000000000000000)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("le_s", (uint64_t)0, (uint64_t)0)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("le_s", (uint64_t)1, (uint64_t)1)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("le_s", (uint64_t)-1, (uint64_t)1)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("le_s", (uint64_t)0x8000000000000000, (uint64_t)0x8000000000000000)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("le_s", (uint64_t)0x7fffffffffffffff, (uint64_t)0x7fffffffffffffff)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("le_s", (uint64_t)-1, (uint64_t)-1)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("le_s", (uint64_t)1, (uint64_t)0)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("le_s", (uint64_t)0, (uint64_t)1)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("le_s", (uint64_t)0x8000000000000000, (uint64_t)0)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("le_s", (uint64_t)0, (uint64_t)0x8000000000000000)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("le_s", (uint64_t)0x8000000000000000, (uint64_t)-1)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("le_s", (uint64_t)-1, (uint64_t)0x8000000000000000)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("le_s", (uint64_t)0x8000000000000000, (uint64_t)0x7fffffffffffffff)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("le_s", (uint64_t)0x7fffffffffffffff, (uint64_t)0x8000000000000000)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("le_u", (uint64_t)0, (uint64_t)0)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("le_u", (uint64_t)1, (uint64_t)1)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("le_u", (uint64_t)-1, (uint64_t)1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("le_u", (uint64_t)0x8000000000000000, (uint64_t)0x8000000000000000)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("le_u", (uint64_t)0x7fffffffffffffff, (uint64_t)0x7fffffffffffffff)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("le_u", (uint64_t)-1, (uint64_t)-1)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("le_u", (uint64_t)1, (uint64_t)0)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("le_u", (uint64_t)0, (uint64_t)1)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("le_u", (uint64_t)0x8000000000000000, (uint64_t)0)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("le_u", (uint64_t)0, (uint64_t)0x8000000000000000)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("le_u", (uint64_t)0x8000000000000000, (uint64_t)-1)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("le_u", (uint64_t)-1, (uint64_t)0x8000000000000000)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("le_u", (uint64_t)0x8000000000000000, (uint64_t)0x7fffffffffffffff)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("le_u", (uint64_t)0x7fffffffffffffff, (uint64_t)0x8000000000000000)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("gt_s", (uint64_t)0, (uint64_t)0)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("gt_s", (uint64_t)1, (uint64_t)1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("gt_s", (uint64_t)-1, (uint64_t)1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("gt_s", (uint64_t)0x8000000000000000, (uint64_t)0x8000000000000000)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("gt_s", (uint64_t)0x7fffffffffffffff, (uint64_t)0x7fffffffffffffff)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("gt_s", (uint64_t)-1, (uint64_t)-1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("gt_s", (uint64_t)1, (uint64_t)0)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("gt_s", (uint64_t)0, (uint64_t)1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("gt_s", (uint64_t)0x8000000000000000, (uint64_t)0)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("gt_s", (uint64_t)0, (uint64_t)0x8000000000000000)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("gt_s", (uint64_t)0x8000000000000000, (uint64_t)-1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("gt_s", (uint64_t)-1, (uint64_t)0x8000000000000000)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("gt_s", (uint64_t)0x8000000000000000, (uint64_t)0x7fffffffffffffff)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("gt_s", (uint64_t)0x7fffffffffffffff, (uint64_t)0x8000000000000000)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("gt_u", (uint64_t)0, (uint64_t)0)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("gt_u", (uint64_t)1, (uint64_t)1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("gt_u", (uint64_t)-1, (uint64_t)1)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("gt_u", (uint64_t)0x8000000000000000, (uint64_t)0x8000000000000000)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("gt_u", (uint64_t)0x7fffffffffffffff, (uint64_t)0x7fffffffffffffff)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("gt_u", (uint64_t)-1, (uint64_t)-1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("gt_u", (uint64_t)1, (uint64_t)0)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("gt_u", (uint64_t)0, (uint64_t)1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("gt_u", (uint64_t)0x8000000000000000, (uint64_t)0)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("gt_u", (uint64_t)0, (uint64_t)0x8000000000000000)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("gt_u", (uint64_t)0x8000000000000000, (uint64_t)-1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("gt_u", (uint64_t)-1, (uint64_t)0x8000000000000000)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("gt_u", (uint64_t)0x8000000000000000, (uint64_t)0x7fffffffffffffff)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("gt_u", (uint64_t)0x7fffffffffffffff, (uint64_t)0x8000000000000000)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ge_s", (uint64_t)0, (uint64_t)0)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ge_s", (uint64_t)1, (uint64_t)1)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ge_s", (uint64_t)-1, (uint64_t)1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ge_s", (uint64_t)0x8000000000000000, (uint64_t)0x8000000000000000)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ge_s", (uint64_t)0x7fffffffffffffff, (uint64_t)0x7fffffffffffffff)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ge_s", (uint64_t)-1, (uint64_t)-1)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ge_s", (uint64_t)1, (uint64_t)0)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ge_s", (uint64_t)0, (uint64_t)1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ge_s", (uint64_t)0x8000000000000000, (uint64_t)0)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ge_s", (uint64_t)0, (uint64_t)0x8000000000000000)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ge_s", (uint64_t)0x8000000000000000, (uint64_t)-1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ge_s", (uint64_t)-1, (uint64_t)0x8000000000000000)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ge_s", (uint64_t)0x8000000000000000, (uint64_t)0x7fffffffffffffff)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ge_s", (uint64_t)0x7fffffffffffffff, (uint64_t)0x8000000000000000)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ge_u", (uint64_t)0, (uint64_t)0)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ge_u", (uint64_t)1, (uint64_t)1)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ge_u", (uint64_t)-1, (uint64_t)1)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ge_u", (uint64_t)0x8000000000000000, (uint64_t)0x8000000000000000)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ge_u", (uint64_t)0x7fffffffffffffff, (uint64_t)0x7fffffffffffffff)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ge_u", (uint64_t)-1, (uint64_t)-1)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ge_u", (uint64_t)1, (uint64_t)0)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ge_u", (uint64_t)0, (uint64_t)1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ge_u", (uint64_t)0x8000000000000000, (uint64_t)0)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ge_u", (uint64_t)0, (uint64_t)0x8000000000000000)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ge_u", (uint64_t)0x8000000000000000, (uint64_t)-1)), (uint64_t)0);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ge_u", (uint64_t)-1, (uint64_t)0x8000000000000000)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ge_u", (uint64_t)0x8000000000000000, (uint64_t)0x7fffffffffffffff)), (uint64_t)1);
      BOOST_CHECK_EQUAL(TO_UINT64(*bkend("ge_u", (uint64_t)0x7fffffffffffffff, (uint64_t)0x8000000000000000)), (uint64_t)0);
   } FC_LOG_AND_RETHROW()
}

BOOST_AUTO_TEST_SUITE_END()
