BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.extend_i32_s", (uint32_t)0)), (uint64_t)0);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.extend_i32_s", (uint32_t)10000)), (uint64_t)10000);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.extend_i32_s", (uint32_t)-10000)), (uint64_t)-10000);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.extend_i32_s", (uint32_t)-1)), (uint64_t)-1);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.extend_i32_s", (uint32_t)0x7fffffff)), (uint64_t)0x000000007fffffff);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.extend_i32_s", (uint32_t)0x80000000)), (uint64_t)0xffffffff80000000);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.extend_i32_u", (uint32_t)0)), (uint64_t)0);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.extend_i32_u", (uint32_t)10000)), (uint64_t)10000);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.extend_i32_u", (uint32_t)-10000)), (uint64_t)0x00000000ffffd8f0);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.extend_i32_u", (uint32_t)-1)), (uint64_t)0xffffffff);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.extend_i32_u", (uint32_t)0x7fffffff)), (uint64_t)0x000000007fffffff);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.extend_i32_u", (uint32_t)0x80000000)), (uint64_t)0x0000000080000000);

BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.wrap_i64", (uint64_t)-1)), (uint32_t)-1);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.wrap_i64", (uint64_t)-100000)), (uint32_t)-100000);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.wrap_i64", (uint64_t)0x80000000)), (uint32_t)0x80000000);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.wrap_i64", (uint64_t)0xffffffff7fffffff)), (uint32_t)0x7fffffff);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.wrap_i64", (uint64_t)0xffffffff00000000)), (uint32_t)0);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.wrap_i64", (uint64_t)0xfffffffeffffffff)), (uint32_t)0xffffffff);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.wrap_i64", (uint64_t)0xffffffff00000001)), (uint32_t)1);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.wrap_i64", (uint64_t)0)), (uint32_t)0);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.wrap_i64", (uint64_t)1311768467463790320)), (uint32_t)0x9abcdef0);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.wrap_i64", (uint64_t)0x00000000ffffffff)), (uint32_t)0xffffffff);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.wrap_i64", (uint64_t)0x0000000100000000)), (uint32_t)0x00000000);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.wrap_i64", (uint64_t)0x0000000100000001)), (uint32_t)0x00000001);

BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f32_s", (float)0.0)), (uint32_t)0);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f32_s", (float)-0.0)), (uint32_t)0);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f32_s", (float)0x1p-149)), (uint32_t)0);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f32_s", (float)-0x1p-149)), (uint32_t)0);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f32_s", (float)1.0)), (uint32_t)1);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f32_s", (float)0x1.19999ap+0)), (uint32_t)1);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f32_s", (float)1.5)), (uint32_t)1);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f32_s", (float)-1.0)), (uint32_t)-1);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f32_s", (float)-0x1.19999ap+0)), (uint32_t)-1);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f32_s", (float)-1.5)), (uint32_t)-1);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f32_s", (float)-1.9)), (uint32_t)-1);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f32_s", (float)-2.0)), (uint32_t)-2);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f32_s", (float)2147483520.0)), (uint32_t)2147483520);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f32_s", (float)-2147483648.0)), (uint32_t)-2147483648);

BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f32_u", (float)0.0)), (uint32_t)0);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f32_u", (float)-0.0)), (uint32_t)0);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f32_u", (float)0x1p-149)), (uint32_t)0);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f32_u", (float)-0x1p-149)), (uint32_t)0);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f32_u", (float)1.0)), (uint32_t)1);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f32_u", (float)0x1.19999ap+0)), (uint32_t)1);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f32_u", (float)1.5)), (uint32_t)1);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f32_u", (float)1.9)), (uint32_t)1);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f32_u", (float)2.0)), (uint32_t)2);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f32_u", (float)2147483648)), (uint32_t)-2147483648);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f32_u", (float)4294967040.0)), (uint32_t)-256);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f32_u", (float)-0x1.ccccccp-1)), (uint32_t)0);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f32_u", (float)-0x1.fffffep-1)), (uint32_t)0);

BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f64_s", (double)0.0)), (uint32_t)0);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f64_s", (double)-0.0)), (uint32_t)0);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f64_s", (double)0x0.0000000000001p-1022)), (uint32_t)0);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f64_s", (double)-0x0.0000000000001p-1022)), (uint32_t)0);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f64_s", (double)1.0)), (uint32_t)1);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f64_s", (double)0x1.199999999999ap+0)), (uint32_t)1);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f64_s", (double)1.5)), (uint32_t)1);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f64_s", (double)-1.0)), (uint32_t)-1);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f64_s", (double)-0x1.199999999999ap+0)), (uint32_t)-1);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f64_s", (double)-1.5)), (uint32_t)-1);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f64_s", (double)-1.9)), (uint32_t)-1);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f64_s", (double)-2.0)), (uint32_t)-2);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f64_s", (double)2147483647.0)), (uint32_t)2147483647);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f64_s", (double)-2147483648.0)), (uint32_t)-2147483648);

BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f64_u", (double)0.0)), (uint32_t)0);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f64_u", (double)-0.0)), (uint32_t)0);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f64_u", (double)0x0.0000000000001p-1022)), (uint32_t)0);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f64_u", (double)-0x0.0000000000001p-1022)), (uint32_t)0);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f64_u", (double)1.0)), (uint32_t)1);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f64_u", (double)0x1.199999999999ap+0)), (uint32_t)1);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f64_u", (double)1.5)), (uint32_t)1);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f64_u", (double)1.9)), (uint32_t)1);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f64_u", (double)2.0)), (uint32_t)2);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f64_u", (double)2147483648)), (uint32_t)2147483648);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f64_u", (double)4294967295.0)), (uint32_t)4294967295);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f64_u", (double)-0x1.ccccccccccccdp-1)), (uint32_t)0);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f64_u", (double)-0x1.fffffffffffffp-1)), (uint32_t)0);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32.trunc_f64_u", (double)1e8)), (uint32_t)100000000);

BOOST_CHECK_EQUAL(TO_F32(*bkend("i64.trunc_f32_s", (float)0.0)), (uint64_t)0);
BOOST_CHECK_EQUAL(TO_F32(*bkend("i64.trunc_f32_s", (float)-0.0)), (uint64_t)0);
BOOST_CHECK_EQUAL(TO_F32(*bkend("i64.trunc_f32_s", (float)0x1p-149)), (uint64_t)0);
BOOST_CHECK_EQUAL(TO_F32(*bkend("i64.trunc_f32_s", (float)-0x1p-149)), (uint64_t)0);
BOOST_CHECK_EQUAL(TO_F32(*bkend("i64.trunc_f32_s", (float)1.0)), (uint64_t)1);
BOOST_CHECK_EQUAL(TO_F32(*bkend("i64.trunc_f32_s", (float)0x1.19999ap+0)), (uint64_t)1);
BOOST_CHECK_EQUAL(TO_F32(*bkend("i64.trunc_f32_s", (float)1.5)), (uint64_t)1);
BOOST_CHECK_EQUAL(TO_F32(*bkend("i64.trunc_f32_s", (float)-1.0)), (uint64_t)-1);
BOOST_CHECK_EQUAL(TO_F32(*bkend("i64.trunc_f32_s", (float)-0x1.19999ap+0)), (uint64_t)-1);
BOOST_CHECK_EQUAL(TO_F32(*bkend("i64.trunc_f32_s", (float)-1.5)), (uint64_t)-1);
BOOST_CHECK_EQUAL(TO_F32(*bkend("i64.trunc_f32_s", (float)-1.9)), (uint64_t)-1);
BOOST_CHECK_EQUAL(TO_F32(*bkend("i64.trunc_f32_s", (float)-2.0)), (uint64_t)-2);
BOOST_CHECK_EQUAL(TO_F32(*bkend("i64.trunc_f32_s", (float)4294967296)), (uint64_t)4294967296);
BOOST_CHECK_EQUAL(TO_F32(*bkend("i64.trunc_f32_s", (float)-4294967296)), (uint64_t)-4294967296);
BOOST_CHECK_EQUAL(TO_F32(*bkend("i64.trunc_f32_s", (float)9223371487098961920.0)), (uint64_t)9223371487098961920);
BOOST_CHECK_EQUAL(TO_F32(*bkend("i64.trunc_f32_s", (float)-9223372036854775808.0)), (uint64_t)-9223372036854775808);

BOOST_CHECK_EQUAL(TO_F32(*bkend("i64.trunc_f32_u", (float)0.0)), (uint64_t)0);
BOOST_CHECK_EQUAL(TO_F32(*bkend("i64.trunc_f32_u", (float)-0.0)), (uint64_t)0);
BOOST_CHECK_EQUAL(TO_F32(*bkend("i64.trunc_f32_u", (float)0x1p-149)), (uint64_t)0);
BOOST_CHECK_EQUAL(TO_F32(*bkend("i64.trunc_f32_u", (float)-0x1p-149)), (uint64_t)0);
BOOST_CHECK_EQUAL(TO_F32(*bkend("i64.trunc_f32_u", (float)1.0)), (uint64_t)1);
BOOST_CHECK_EQUAL(TO_F32(*bkend("i64.trunc_f32_u", (float)0x1.19999ap+0)), (uint64_t)1);
BOOST_CHECK_EQUAL(TO_F32(*bkend("i64.trunc_f32_u", (float)1.5)), (uint64_t)1);
BOOST_CHECK_EQUAL(TO_F32(*bkend("i64.trunc_f32_u", (float)4294967296)), (uint64_t)4294967296);
BOOST_CHECK_EQUAL(TO_F32(*bkend("i64.trunc_f32_u", (float)18446742974197923840.0)), (uint64_t)18446742974197923840);
BOOST_CHECK_EQUAL(TO_F32(*bkend("i64.trunc_f32_u", (float)-0x1.ccccccp-1)), (uint64_t)0);
BOOST_CHECK_EQUAL(TO_F32(*bkend("i64.trunc_f32_u", (float)-0x1.fffffep-1)), (uint64_t)0);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.trunc_f64_s", (double)0.0)), (uint64_t)0);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.trunc_f64_s", (double)-0.0)), (uint64_t)0);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.trunc_f64_s", (double)0x0.0000000000001p-1022)), (uint64_t)0);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.trunc_f64_s", (double)-0x0.0000000000001p-1022)), (uint64_t)0);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.trunc_f64_s", (double)1.0)), (uint64_t)1.0);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.trunc_f64_s", (double)0x1.199999999999ap+0)), (uint64_t)1);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.trunc_f64_s", (double)1.5)), (uint64_t)1);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.trunc_f64_s", (double)-1.0)), (uint64_t)-1);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.trunc_f64_s", (double)-0x1.199999999999ap+0)), (uint64_t)-1);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.trunc_f64_s", (double)-1.5)), (uint64_t)-1);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.trunc_f64_s", (double)-1.9)), (uint64_t)-1);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.trunc_f64_s", (double)-2.0)), (uint64_t)-2);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.trunc_f64_s", (double)4294967296)), (uint64_t)4294967296);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.trunc_f64_s", (double)-4294967296)), (uint64_t)-4294967296);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.trunc_f64_s", (double)9223372036854774784.0)), (uint64_t)9223372036854774784);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.trunc_f64_s", (double)-9223372036854775808.0)), (uint64_t)-9223372036854775808);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.trunc_f64_u", (double)0.0)), (uint64_t)0);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.trunc_f64_u", (double)-0.0)), (uint64_t)0);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.trunc_f64_u", (double)0x0.0000000000001p-1022)), (uint64_t)0);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.trunc_f64_u", (double)-0x0.0000000000001p-1022)), (uint64_t)0);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.trunc_f64_u", (double)1.0)), (uint64_t)1);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.trunc_f64_u", (double)0x1.199999999999ap+0)), (uint64_t)1);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.trunc_f64_u", (double)1.5)), (uint64_t)1);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.trunc_f64_u", (double)4294967295)), (uint64_t)4294967295);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.trunc_f64_u", (double)4294967296)), (uint64_t)4294967296);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.trunc_f64_u", (double)18446744073709549568.0)), (uint64_t)18446744073709549568);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.trunc_f64_u", (double)-0x1.ccccccccccccdp-1)), (uint64_t)0);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.trunc_f64_u", (double)-0x1.fffffffffffffp-1)), (uint64_t)0);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.trunc_f64_u", (double)1e8)), (uint64_t)1000000000);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.trunc_f64_u", (double)1e16)), (uint64_t)1000000000000000000);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64.trunc_f64_u", (double)9223372036854775808)), (uint64_t)-9223372036854775808);

BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i32_s", (uint32_t)1)), (float)1.0);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i32_s", (uint32_t)-1)), (float)-1.0);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i32_s", (uint32_t)0)), (float)0.0);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i32_s", (uint32_t)2147483647)), (float)2147483648);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i32_s", (uint32_t)-2147483648)), (float)-2147483648);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i32_s", (uint32_t)1234567890)), (float)0x1.26580cp+30);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i32_s", (uint32_t)16777217)), (float)16777216.0);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i32_s", (uint32_t)-16777217)), (float)-16777216.0);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i32_s", (uint32_t)16777219)), (float)16777220.0);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i32_s", (uint32_t)-16777219)), (float)-16777220.0);

BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i64_s", (uint64_t)1)), (float)1);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i64_s", (uint64_t)-1)), (float)-1);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i64_s", (uint64_t)0)), (float)0);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i64_s", (uint64_t)9223372036854775807)), (float)9223372036854775807);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i64_s", (uint64_t)-9223372036854775808)), (float)-9223372036854775808);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i64_s", (uint64_t)314159265358979)), (float)0x1.1db9e8p+48);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i64_s", (uint64_t)16777217)), (float)16777216.0);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i64_s", (uint64_t)-16777217)), (float)-16777216.0);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i64_s", (uint64_t)16777219)), (float)16777220);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i64_s", (uint64_t)-16777219)), (float)-16777220);

BOOST_CHECK_EQUAL(TO_F64(*bkend("f64.convert_i32_s", (uint32_t)1)), (double)1.0);
BOOST_CHECK_EQUAL(TO_F64(*bkend("f64.convert_i32_s", (uint32_t)-1)), (double)-1.0);
BOOST_CHECK_EQUAL(TO_F64(*bkend("f64.convert_i32_s", (uint32_t)0)), (double)0.0);
BOOST_CHECK_EQUAL(TO_F64(*bkend("f64.convert_i32_s", (uint32_t)2147483647)), (double)2147483647);
BOOST_CHECK_EQUAL(TO_F64(*bkend("f64.convert_i32_s", (uint32_t)-2147483648)), (double)-2147483648);
BOOST_CHECK_EQUAL(TO_F64(*bkend("f64.convert_i32_s", (uint32_t)987654321)), (double)987654321);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend("f64.convert_i64_s", (uint64_t)1)), (double)1);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("f64.convert_i64_s", (uint64_t)-1)), (double)-1);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("f64.convert_i64_s", (uint64_t)0)), (double)0);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("f64.convert_i64_s", (uint64_t)9223372036854775807)), (double)9223372036854775807);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("f64.convert_i64_s", (uint64_t)-9223372036854775808)), (double)-9223372036854775808);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("f64.convert_i64_s", (uint64_t)4669201609102990)), (double)4669201609102990);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("f64.convert_i64_s", (uint64_t)9007199254740993)), (double)9007199254740992);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("f64.convert_i64_s", (uint64_t)-9007199254740993)), (double)-9007199254740992);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("f64.convert_i64_s", (uint64_t)9007199254740995)), (double)9007199254740996);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("f64.convert_i64_s", (uint64_t)-9007199254740995)), (double)-9007199254740996);

BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i32_u", (uint32_t)1)), (float)1.0);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i32_u", (uint32_t)0)), (float)0.0);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i32_u", (uint32_t)2147483647)), (float)2147483648);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i32_u", (uint32_t)-2147483648)), (float)2147483648);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i32_u", (uint32_t)0x12345678)), (float)0x1.234568p+28);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i32_u", (uint32_t)0xffffffff)), (float)4294967296.0);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i32_u", (uint32_t)0x80000080)), (float)0x1.000000p+31);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i32_u", (uint32_t)0x80000081)), (float)0x1.000002p+31);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i32_u", (uint32_t)0x80000082)), (float)0x1.000002p+31);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i32_u", (uint32_t)0xfffffe80)), (float)0x1.fffffcp+31);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i32_u", (uint32_t)0xfffffe81)), (float)0x1.fffffep+31);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i32_u", (uint32_t)0xfffffe82)), (float)0x1.fffffep+31);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i32_u", (uint32_t)16777217)), (float)16777216.0);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i32_u", (uint32_t)16777219)), (float)16777220.0);

BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i64_u", (uint64_t)1)), (float)1);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i64_u", (uint64_t)0)), (float)0);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i64_u", (uint64_t)9223372036854775807)), (float)9223372036854775807);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i64_u", (uint64_t)-9223372036854775808)), (float)-9223372036854775808);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i64_u", (uint64_t)0xffffffffffffffff)), (float)18446744073709551616.0);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i64_u", (uint64_t)16777217)), (float)16777216);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.convert_i64_u", (uint64_t)16777219)), (float)16777220);

BOOST_CHECK_EQUAL(TO_F64(*bkend("f64.convert_i32_u", (uint32_t)1)), (double)1.0);
BOOST_CHECK_EQUAL(TO_F64(*bkend("f64.convert_i32_u", (uint32_t)0)), (double)0.0);
BOOST_CHECK_EQUAL(TO_F64(*bkend("f64.convert_i32_u", (uint32_t)2147483647)), (double)2147483647);
BOOST_CHECK_EQUAL(TO_F64(*bkend("f64.convert_i32_u", (uint32_t)-2147483648)), (double)2147483648);
BOOST_CHECK_EQUAL(TO_F64(*bkend("f64.convert_i32_u", (uint32_t)0xffffffff)), (double)4294967295.0);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend("f64.convert_i64_u", (uint64_t)1)), (double)1);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("f64.convert_i64_u", (uint64_t)0)), (double)0);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("f64.convert_i64_u", (uint64_t)9223372036854775807)), (double)9223372036854775807);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("f64.convert_i64_u", (uint64_t)-9223372036854775808)), (double)9223372036854775808);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("f64.convert_i64_u", (uint64_t)0xffffffffffffffff)), (double)18446744073709551616.0);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("f64.convert_i64_u", (uint64_t)0x8000000000000400)), (double)0x1.0000000000000p+63);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("f64.convert_i64_u", (uint64_t)0x8000000000000401)), (double)0x1.0000000000001p+63);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("f64.convert_i64_u", (uint64_t)0x8000000000000402)), (double)0x1.0000000000001p+63);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("f64.convert_i64_u", (uint64_t)0xfffffffffffff400)), (double)0x1.ffffffffffffep+63);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("f64.convert_i64_u", (uint64_t)0xfffffffffffff401)), (double)0x1.fffffffffffffp+63);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("f64.convert_i64_u", (uint64_t)0xfffffffffffff402)), (double)0x1.fffffffffffffp+63);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("f64.convert_i64_u", (uint64_t)9007199254740993)), (double)9007199254740992);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("f64.convert_i64_u", (uint64_t)9007199254740995)), (double)9007199254740996);

BOOST_CHECK_EQUAL(TO_F32(*bkend("f64.promote_f32", (float)0.0)), (double)0.0);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f64.promote_f32", (float)-0.0)), (double)-0.0);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f64.promote_f32", (float)0x1p-149)), (double)0x1p-149);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f64.promote_f32", (float)-0x1p-149)), (double)-0x1p-149);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f64.promote_f32", (float)1.0)), (double)1.0);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f64.promote_f32", (float)-1.0)), (double)-1.0);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f64.promote_f32", (float)-0x1.fffffep+127)), (double)-0x1.fffffep+127);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f64.promote_f32", (float)0x1.fffffep+127)), (double)0x1.fffffep+127);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f64.promote_f32", (float)0x1p-119)), (double)0x1p-119);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f64.promote_f32", (float)0x1.8f867ep+125)), (double)6.6382536710104395e+37);
/*
BOOST_CHECK_EQUAL(TO_F32(*bkend("f64.promote_f32", (float)inf)), (float)inf);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f64.promote_f32", (float)-inf)), (float)-inf);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f64.promote_f32", (float)nan)), (float)nan);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f64.promote_f32", (float)-nan)), (float)-nan);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)0.0);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)-0.0);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)0x0.0000000000001p-1022);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)-0x0.0000000000001p-1022);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)1.0);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)-1.0);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)0x1.fffffe0000000p-127);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)-0x1.fffffe0000000p-127);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)0x1.fffffdfffffffp-127);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)-0x1.fffffdfffffffp-127);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)0x1p-149);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)-0x1p-149);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)0x1.fffffd0000000p+127);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)-0x1.fffffd0000000p+127);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)0x1.fffffd0000001p+127);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)-0x1.fffffd0000001p+127);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)0x1.fffffep+127);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)-0x1.fffffep+127);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)0x1.fffffefffffffp+127);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)-0x1.fffffefffffffp+127);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)0x1.ffffffp+127);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)-0x1.ffffffp+127);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)0x1p-119);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)0x1.8f867ep+125);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)inf);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)-inf);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)0x1.0000000000001p+0);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)0x1.fffffffffffffp-1);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)0x1.0000010000000p+0);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)0x1.0000010000001p+0);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)0x1.000002fffffffp+0);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)0x1.0000030000000p+0);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)0x1.0000050000000p+0);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)0x1.0000010000000p+24);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)0x1.0000010000001p+24);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)0x1.000002fffffffp+24);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)0x1.0000030000000p+24);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)0x1.4eae4f7024c7p+108);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)0x1.a12e71e358685p-113);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)0x1.cb98354d521ffp-127);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)-0x1.6972b30cfb562p+1);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)-0x1.bedbe4819d4c4p+112);

BOOST_CHECK_EQUAL(TO_F64(*bkend()), (double)nan);

BOOST_CHECK_EQUAL(TO_F64(*bkend()), (double)nan:0x4000000000000);

BOOST_CHECK_EQUAL(TO_F64(*bkend()), (double)-nan);

BOOST_CHECK_EQUAL(TO_F64(*bkend()), (double)-nan:0x4000000000000);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)0x1p-1022);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)-0x1p-1022);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)0x1.0p-150);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)-0x1.0p-150);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)0x1.0000000000001p-150);

BOOST_CHECK_EQUAL(TO_F32(*bkend()), (float)-0x1.0000000000001p-150);

BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.reinterpret_i32", (uint32_t)0)), (float)0.0);

BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.reinterpret_i32", (uint32_t)0x80000000)), (float)-0.0);

BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.reinterpret_i32", (uint32_t)1)), (float)0x1p-149);

BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.reinterpret_i32", (uint32_t)-1)), (float)-nan:0x7fffff);

BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.reinterpret_i32", (uint32_t)123456789)), (float)0x1.b79a2ap-113);

BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.reinterpret_i32", (uint32_t)-2147483647)), (float)-0x1p-149);

BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.reinterpret_i32", (uint32_t)0x7f800000)), (float)inf);

BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.reinterpret_i32", (uint32_t)0xff800000)), (float)-inf);

BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.reinterpret_i32", (uint32_t)0x7fc00000)), (float)nan);

BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.reinterpret_i32", (uint32_t)0xffc00000)), (float)-nan);

BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.reinterpret_i32", (uint32_t)0x7fa00000)), (float)nan:0x200000);

BOOST_CHECK_EQUAL(TO_F32(*bkend("f32.reinterpret_i32", (uint32_t)0xffa00000)), (float)-nan:0x200000);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend()), (uint64_t)0);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend()), (uint64_t)1);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend()), (uint64_t)-1);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend()), (uint64_t)0x8000000000000000);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend()), (uint64_t)1234567890);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend()), (uint64_t)-9223372036854775807);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend()), (uint64_t)0x7ff0000000000000);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend()), (uint64_t)0xfff0000000000000);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend()), (uint64_t)0x7ff8000000000000);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend()), (uint64_t)0xfff8000000000000);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend()), (uint64_t)0x7ff4000000000000);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend()), (uint64_t)0xfff4000000000000);

BOOST_CHECK_EQUAL(TO_UINT32(*bkend()), (uint32_t)0.0);

BOOST_CHECK_EQUAL(TO_UINT32(*bkend()), (uint32_t)-0.0);

BOOST_CHECK_EQUAL(TO_UINT32(*bkend()), (uint32_t)0x1p-149);

BOOST_CHECK_EQUAL(TO_UINT32(*bkend()), (uint32_t)-nan:0x7fffff);

BOOST_CHECK_EQUAL(TO_UINT32(*bkend()), (uint32_t)-0x1p-149);

BOOST_CHECK_EQUAL(TO_UINT32(*bkend()), (uint32_t)1.0);

BOOST_CHECK_EQUAL(TO_UINT32(*bkend()), (uint32_t)3.1415926);

BOOST_CHECK_EQUAL(TO_UINT32(*bkend()), (uint32_t)0x1.fffffep+127);

BOOST_CHECK_EQUAL(TO_UINT32(*bkend()), (uint32_t)-0x1.fffffep+127);

BOOST_CHECK_EQUAL(TO_UINT32(*bkend()), (uint32_t)inf);

BOOST_CHECK_EQUAL(TO_UINT32(*bkend()), (uint32_t)-inf);

BOOST_CHECK_EQUAL(TO_UINT32(*bkend()), (uint32_t)nan);

BOOST_CHECK_EQUAL(TO_UINT32(*bkend()), (uint32_t)-nan);

BOOST_CHECK_EQUAL(TO_UINT32(*bkend()), (uint32_t)nan:0x200000);

BOOST_CHECK_EQUAL(TO_UINT32(*bkend()), (uint32_t)-nan:0x200000);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend()), (uint64_t)0.0);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend()), (uint64_t)-0.0);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend()), (uint64_t)0x0.0000000000001p-1022);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend()), (uint64_t)-nan:0xfffffffffffff);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend()), (uint64_t)-0x0.0000000000001p-1022);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend()), (uint64_t)1.0);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend()), (uint64_t)3.14159265358979);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend()), (uint64_t)0x1.fffffffffffffp+1023);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend()), (uint64_t)-0x1.fffffffffffffp+1023);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend()), (uint64_t)inf);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend()), (uint64_t)-inf);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend()), (uint64_t)nan);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend()), (uint64_t)-nan);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend()), (uint64_t)nan:0x4000000000000);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend()), (uint64_t)-nan:0x4000000000000);
*/
