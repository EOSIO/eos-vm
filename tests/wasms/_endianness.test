BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32_load16_s", (uint32_t)-1)), (uint32_t)-1);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32_load16_s", (uint32_t)-4242)), (uint32_t)-4242);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32_load16_s", (uint32_t)42)), (uint32_t)42);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32_load16_s", (uint32_t)0x3210)), (uint32_t)0x3210);

BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32_load16_u", (uint32_t)-1)), (uint32_t)0xFFFF);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32_load16_u", (uint32_t)-4242)), (uint32_t)61294);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32_load16_u", (uint32_t)42)), (uint32_t)42);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32_load16_u", (uint32_t)0xCAFE)), (uint32_t)0xCAFE);

BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32_load", (uint32_t)-1)), (uint32_t)-1);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32_load", (uint32_t)-42424242)), (uint32_t)-42424242);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32_load", (uint32_t)42424242)), (uint32_t)42424242);
BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32_load", (uint32_t)0xABAD1DEA)), (uint32_t)0xABAD1DEA);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64_load16_s", (uint64_t)-1)), (uint64_t)-1);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64_load16_s", (uint64_t)-4242)), (uint64_t)-4242);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64_load16_s", (uint64_t)42)), (uint64_t)42);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64_load16_s", (uint64_t)0x3210)), (uint64_t)0x3210);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64_load16_u", (uint64_t)-1)), (uint64_t)-1);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64_load16_u", (uint64_t)-4242)), (uint64_t)-4242);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64_load16_u", (uint64_t)42)), (uint64_t)42);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64_load16_u", (uint64_t)0xCAFE)), (uint64_t)0xCAFE);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64_load32_s", (uint64_t)-1)), (uint64_t)-1);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64_load32_s", (uint64_t)-42424242)), (uint64_t)-42424242);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64_load32_s", (uint64_t)42424242)), (uint64_t)42424242);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64_load32_s", (uint64_t)0x12345678)), (uint64_t)0x12345678);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64_load32_u", (uint64_t)-1)), (uint64_t)-1);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64_load32_u", (uint64_t)-42424242)), (uint64_t)-42424242);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64_load32_u", (uint64_t)42424242)), (uint64_t)42424242);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64_load32_u", (uint64_t)0xABAD1DEA)), (uint64_t)0xABAD1DEA);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64_load", (uint64_t)-1)), (uint64_t)-1);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64_load", (uint64_t)-42424242)), (uint64_t)-42424242);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64_load", (uint64_t)0xABAD1DEA)), (uint64_t)0xABAD1DEA);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64_load", (uint64_t)0xABADCAFEDEAD1DEA)), (uint64_t)0xABADCAFEDEAD1DEA);

BOOST_CHECK_EQUAL(TO_F32(*bkend("f32_load", (float)-1)), (float)-1);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32_load", (float)1234e-5)), (float)1234e-5);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32_load", (float)4242.4242)), (float)4242.4242);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32_load", (float)0x1.fffffep+127)), (float)0x1.fffffep+127);

BOOST_CHECK_EQUAL(TO_F64(*bkend("f64_load", (double)-1)), (double)-1);
BOOST_CHECK_EQUAL(TO_F64(*bkend("f64_load", (double)123456789e-5)), (double)123456789e-5);
BOOST_CHECK_EQUAL(TO_F64(*bkend("f64_load", (double)424242.424242)), (double)424242.424242);
BOOST_CHECK_EQUAL(TO_F64(*bkend("f64_load", (double)0x1.fffffffffffffp+1023)), (double)0x1.fffffffffffffp+1023);

BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32_store16", (uint32_t)-1)), (uint32_t)0xFFFF);

BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32_store16", (uint32_t)-4242)), (uint32_t)61294);

BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32_store16", (uint32_t)42)), (uint32_t)42);

BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32_store16", (uint32_t)0xCAFE)), (uint32_t)0xCAFE);

BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32_store", (uint32_t)-1)), (uint32_t)-1);

BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32_store", (uint32_t)-4242)), (uint32_t)-4242);

BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32_store", (uint32_t)42424242)), (uint32_t)42424242);

BOOST_CHECK_EQUAL(TO_UINT32(*bkend("i32_store", (uint32_t)0xDEADCAFE)), (uint32_t)0xDEADCAFE);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64_store16", (uint64_t)-1)), (uint64_t)-1);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64_store16", (uint64_t)-4242)), (uint64_t)-4242);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64_store16", (uint64_t)42)), (uint64_t)42);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64_store16", (uint64_t)0xCAFE)), (uint64_t)0xCAFE);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64_store32", (uint64_t)-1)), (uint64_t)-1);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64_store32", (uint64_t)-4242)), (uint64_t)-4242);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64_store32", (uint64_t)42424242)), (uint64_t)42424242);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64_store32", (uint64_t)0xDEADCAFE)), (uint64_t)0xDEADCAFE);

BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64_store", (uint64_t)-1)), (uint64_t)-1);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64_store", (uint64_t)-42424242)), (uint64_t)-42424242);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64_store", (uint64_t)0xABAD1DEA)), (uint64_t)0xABAD1DEA);
BOOST_CHECK_EQUAL(TO_UINT64(*bkend("i64_store", (uint64_t)0xABADCAFEDEAD1DEA)), (uint64_t)0xABADCAFEDEAD1DEA);

BOOST_CHECK_EQUAL(TO_F32(*bkend("f32_store", (float)-1)), (float)-1);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32_store", (float)1234e-5)), (float)1234e-5);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32_store", (float)4242.4242)), (float)4242.4242);
BOOST_CHECK_EQUAL(TO_F32(*bkend("f32_store", (float)0x1.fffffep+127)), (float)0x1.fffffep+127);

BOOST_CHECK_EQUAL(TO_F64(*bkend("f64_store", (double)-1)), (double)-1);
BOOST_CHECK_EQUAL(TO_F64(*bkend("f64_store", (double)123456789e-5)), (double)123456789e-5);
BOOST_CHECK_EQUAL(TO_F64(*bkend("f64_store", (double)424242.424242)), (double)424242.424242);
BOOST_CHECK_EQUAL(TO_F64(*bkend("f64_store", (double)0x1.fffffffffffffp+1023)), (double)0x1.fffffffffffffp+1023);
