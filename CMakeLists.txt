# Defines wasm_interpreter library
cmake_minimum_required( VERSION 3.8 )
project ( WasmInterpreter )
set( VERSION_MAJOR 0 )
set( VERSION_MINOR 0 )
set( VERSION_PATCH 0 )

set( CMAKE_CXX_STANDARD 17 )
#set( CXX_STANDARD_REQUIRED ON )

find_package( Gperftools QUIET )
if( GPERFTOOLS_FOUND )
    message( STATUS "Found gperftools; compiling tests with TCMalloc")
    list( APPEND PLATFORM_SPECIFIC_LIBS tcmalloc )
endif()

SET( Boost_USE_STATIC_LIBS ON CACHE STRING "ON or OFF" )
IF( WIN32 )
  SET(BOOST_ROOT $ENV{BOOST_ROOT})
  set(Boost_USE_MULTITHREADED ON)
  set(BOOST_ALL_DYN_LINK OFF) # force dynamic linking for all libraries
ENDIF(WIN32)

FIND_PACKAGE(Boost 1.50 REQUIRED COMPONENTS
    thread
    date_time
    filesystem
    system
    program_options
    signals
    serialization
    chrono
    unit_test_framework
    context
    locale
    iostreams)

set( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${CMAKE_C_FLAGS} -O3 -std=c++17" )

if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
   if (CMAKE_CXX_COMPILER_VERSION VERSION_GREATER 7.0)
      set( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -mllvm -use-cfl-aa-in-codegen=both" )
   endif()
   set( CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -flto" )
endif()

if ( APPLE )
   set( CMAKE_CXX_FLAGS "${CMAKE_C_FLAGS} -O3 -Wall -Wno-deprecated-declarations -mllvm -use-cfl-aa-in-codegen=both" )
   set( CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -flto" )
else()
   set( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall" )
   set( CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -static-libstdc++ -static-libgcc" )
endif()

# generate compile command database for external tools
set (CMAKE_EXPORT_COMPILE_COMMANDS "ON")

message( STATUS "Configuring WasmInterpreter" )
set( CMAKE_C_FLAGS " -Wall -Werror-implicit-function-declaration -Wno-conversion ${CMAKE_C_FLAGS} ${C_DEFINES}" )

file( GLOB wasm_interpreter_sources "${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp" )
file( GLOB wasm_interpreter_headers "${CMAKE_CURRENT_SOURCE_DIR}/include/eosio/wasm_backend/*.hpp" )

list( APPEND wasm_interpreter_sources ${wasm_interpreter_headers} )
add_library ( wasm_interpreter STATIC ${wasm_interpreter_sources} )

add_executable( prog ${CMAKE_CURRENT_SOURCE_DIR}/main.cpp )
target_link_libraries( prog wasm_interpreter )
target_include_directories( prog PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/include" "${CMAKE_CURRENT_SOURCE_DIR}/softfloat/source/include")

#add_executable( wasm_t ${CMAKE_SOURCE_DIR}/tests/fuzz/fuzz_parser.cpp ${fc} ${wasm_interpreter} ${filesystem} ${chrono} ${date_time})

target_include_directories( wasm_interpreter PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/include"
                                                    "${CMAKE_CURRENT_SOURCE_DIR}/softfloat/source/include"
                                                    "${Boost_INCLUDE_DIRS}" )


if (${USE_EXISTING_SOFTFLOAT} STREQUAL "")
   set(USE_EXISTING_SOFTFLOAT "False")
endif()

if (NOT USE_EXISTING_SOFTFLOAT)
   set( C_DEFINES "-DSOFTFLOAT_FAST_INT64 -DSOFTFLOAT_ROUND_EVEN -DINLINE_LEVEL=5 -DSOFTFLOAT_FAST_DIV32TO16 -DSOFTFLOAT_FAST_DIV64TO32" )
   set( CMAKE_C_FLAGS " -Wall -Werror-implicit-function-declaration -Wno-conversion ${CMAKE_C_FLAGS} ${C_DEFINES}" )
   set ( softfloat_sources
     softfloat/source/s_eq128.c
     softfloat/source/s_le128.c
     softfloat/source/s_lt128.c
     softfloat/source/s_shortShiftLeft128.c
     softfloat/source/s_shortShiftRight128.c
     softfloat/source/s_shortShiftRightJam64.c
     softfloat/source/s_shortShiftRightJam64Extra.c
     softfloat/source/s_shortShiftRightJam128.c
     softfloat/source/s_shortShiftRightJam128Extra.c
     softfloat/source/s_shiftRightJam32.c
     softfloat/source/s_shiftRightJam64.c
     softfloat/source/s_shiftRightJam64Extra.c
     softfloat/source/s_shiftRightJam128.c
     softfloat/source/s_shiftRightJam128Extra.c
     softfloat/source/s_shiftRightJam256M.c
     softfloat/source/s_countLeadingZeros8.c
     softfloat/source/s_countLeadingZeros16.c
     softfloat/source/s_countLeadingZeros32.c
     softfloat/source/s_countLeadingZeros64.c
     softfloat/source/s_add128.c
     softfloat/source/s_add256M.c
     softfloat/source/s_sub128.c
     softfloat/source/s_sub256M.c
     softfloat/source/s_mul64ByShifted32To128.c
     softfloat/source/s_mul64To128.c
     softfloat/source/s_mul128By32.c
     softfloat/source/s_mul128To256M.c
     softfloat/source/s_approxRecip_1Ks.c
     softfloat/source/s_approxRecip32_1.c
     softfloat/source/s_approxRecipSqrt_1Ks.c
     softfloat/source/s_approxRecipSqrt32_1.c
     softfloat/source/8086-SSE/softfloat_raiseFlags.c
     softfloat/source/8086-SSE/s_f16UIToCommonNaN.c
     softfloat/source/8086-SSE/s_commonNaNToF16UI.c
     softfloat/source/8086-SSE/s_propagateNaNF16UI.c
     softfloat/source/8086-SSE/s_f32UIToCommonNaN.c
     softfloat/source/8086-SSE/s_commonNaNToF32UI.c
     softfloat/source/8086-SSE/s_propagateNaNF32UI.c
     softfloat/source/8086-SSE/s_f64UIToCommonNaN.c
     softfloat/source/8086-SSE/s_commonNaNToF64UI.c
     softfloat/source/8086-SSE/s_propagateNaNF64UI.c
     softfloat/source/8086-SSE/extF80M_isSignalingNaN.c
     softfloat/source/8086-SSE/s_extF80UIToCommonNaN.c
     softfloat/source/8086-SSE/s_commonNaNToExtF80UI.c
     softfloat/source/8086-SSE/s_propagateNaNExtF80UI.c
     softfloat/source/8086-SSE/f128M_isSignalingNaN.c
     softfloat/source/8086-SSE/s_f128UIToCommonNaN.c
     softfloat/source/8086-SSE/s_commonNaNToF128UI.c
     softfloat/source/8086-SSE/s_propagateNaNF128UI.c
     softfloat/source/s_roundToUI32.c
     softfloat/source/s_roundToUI64.c
     softfloat/source/s_roundToI32.c
     softfloat/source/s_roundToI64.c
     softfloat/source/s_normSubnormalF16Sig.c
     softfloat/source/s_roundPackToF16.c
     softfloat/source/s_normRoundPackToF16.c
     softfloat/source/s_addMagsF16.c
     softfloat/source/s_subMagsF16.c
     softfloat/source/s_mulAddF16.c
     softfloat/source/s_normSubnormalF32Sig.c
     softfloat/source/s_roundPackToF32.c
     softfloat/source/s_normRoundPackToF32.c
     softfloat/source/s_addMagsF32.c
     softfloat/source/s_subMagsF32.c
     softfloat/source/s_mulAddF32.c
     softfloat/source/s_normSubnormalF64Sig.c
     softfloat/source/s_roundPackToF64.c
     softfloat/source/s_normRoundPackToF64.c
     softfloat/source/s_addMagsF64.c
     softfloat/source/s_subMagsF64.c
     softfloat/source/s_mulAddF64.c
     softfloat/source/s_normSubnormalExtF80Sig.c
     softfloat/source/s_roundPackToExtF80.c
     softfloat/source/s_normRoundPackToExtF80.c
     softfloat/source/s_addMagsExtF80.c
     softfloat/source/s_subMagsExtF80.c
     softfloat/source/s_normSubnormalF128Sig.c
     softfloat/source/s_roundPackToF128.c
     softfloat/source/s_normRoundPackToF128.c
     softfloat/source/s_addMagsF128.c
     softfloat/source/s_subMagsF128.c
     softfloat/source/s_mulAddF128.c
     softfloat/source/softfloat_state.c
     softfloat/source/ui32_to_f16.c
     softfloat/source/ui32_to_f32.c
     softfloat/source/ui32_to_f64.c
     softfloat/source/ui32_to_extF80.c
     softfloat/source/ui32_to_extF80M.c
     softfloat/source/ui32_to_f128.c
     softfloat/source/ui32_to_f128M.c
     softfloat/source/ui64_to_f16.c
     softfloat/source/ui64_to_f32.c
     softfloat/source/ui64_to_f64.c
     softfloat/source/ui64_to_extF80.c
     softfloat/source/ui64_to_extF80M.c
     softfloat/source/ui64_to_f128.c
     softfloat/source/ui64_to_f128M.c
     softfloat/source/i32_to_f16.c
     softfloat/source/i32_to_f32.c
     softfloat/source/i32_to_f64.c
     softfloat/source/i32_to_extF80.c
     softfloat/source/i32_to_extF80M.c
     softfloat/source/i32_to_f128.c
     softfloat/source/i32_to_f128M.c
     softfloat/source/i64_to_f16.c
     softfloat/source/i64_to_f32.c
     softfloat/source/i64_to_f64.c
     softfloat/source/i64_to_extF80.c
     softfloat/source/i64_to_extF80M.c
     softfloat/source/i64_to_f128.c
     softfloat/source/i64_to_f128M.c
     softfloat/source/f16_to_ui32.c
     softfloat/source/f16_to_ui64.c
     softfloat/source/f16_to_i32.c
     softfloat/source/f16_to_i64.c
     softfloat/source/f16_to_ui32_r_minMag.c
     softfloat/source/f16_to_ui64_r_minMag.c
     softfloat/source/f16_to_i32_r_minMag.c
     softfloat/source/f16_to_i64_r_minMag.c
     softfloat/source/f16_to_f32.c
     softfloat/source/f16_to_f64.c
     softfloat/source/f16_to_extF80.c
     softfloat/source/f16_to_extF80M.c
     softfloat/source/f16_to_f128.c
     softfloat/source/f16_to_f128M.c
     softfloat/source/f16_roundToInt.c
     softfloat/source/f16_add.c
     softfloat/source/f16_sub.c
     softfloat/source/f16_mul.c
     softfloat/source/f16_mulAdd.c
     softfloat/source/f16_div.c
     softfloat/source/f16_rem.c
     softfloat/source/f16_sqrt.c
     softfloat/source/f16_eq.c
     softfloat/source/f16_le.c
     softfloat/source/f16_lt.c
     softfloat/source/f16_eq_signaling.c
     softfloat/source/f16_le_quiet.c
     softfloat/source/f16_lt_quiet.c
     softfloat/source/f16_isSignalingNaN.c
     softfloat/source/f32_to_ui32.c
     softfloat/source/f32_to_ui64.c
     softfloat/source/f32_to_i32.c
     softfloat/source/f32_to_i64.c
     softfloat/source/f32_to_ui32_r_minMag.c
     softfloat/source/f32_to_ui64_r_minMag.c
     softfloat/source/f32_to_i32_r_minMag.c
     softfloat/source/f32_to_i64_r_minMag.c
     softfloat/source/f32_to_f16.c
     softfloat/source/f32_to_f64.c
     softfloat/source/f32_to_extF80.c
     softfloat/source/f32_to_extF80M.c
     softfloat/source/f32_to_f128.c
     softfloat/source/f32_to_f128M.c
     softfloat/source/f32_roundToInt.c
     softfloat/source/f32_add.c
     softfloat/source/f32_sub.c
     softfloat/source/f32_mul.c
     softfloat/source/f32_mulAdd.c
     softfloat/source/f32_div.c
     softfloat/source/f32_rem.c
     softfloat/source/f32_sqrt.c
     softfloat/source/f32_eq.c
     softfloat/source/f32_le.c
     softfloat/source/f32_lt.c
     softfloat/source/f32_eq_signaling.c
     softfloat/source/f32_le_quiet.c
     softfloat/source/f32_lt_quiet.c
     softfloat/source/f32_isSignalingNaN.c
     softfloat/source/f64_to_ui32.c
     softfloat/source/f64_to_ui64.c
     softfloat/source/f64_to_i32.c
     softfloat/source/f64_to_i64.c
     softfloat/source/f64_to_ui32_r_minMag.c
     softfloat/source/f64_to_ui64_r_minMag.c
     softfloat/source/f64_to_i32_r_minMag.c
     softfloat/source/f64_to_i64_r_minMag.c
     softfloat/source/f64_to_f16.c
     softfloat/source/f64_to_f32.c
     softfloat/source/f64_to_extF80.c
     softfloat/source/f64_to_extF80M.c
     softfloat/source/f64_to_f128.c
     softfloat/source/f64_to_f128M.c
     softfloat/source/f64_roundToInt.c
     softfloat/source/f64_add.c
     softfloat/source/f64_sub.c
     softfloat/source/f64_mul.c
     softfloat/source/f64_mulAdd.c
     softfloat/source/f64_div.c
     softfloat/source/f64_rem.c
     softfloat/source/f64_sqrt.c
     softfloat/source/f64_eq.c
     softfloat/source/f64_le.c
     softfloat/source/f64_lt.c
     softfloat/source/f64_eq_signaling.c
     softfloat/source/f64_le_quiet.c
     softfloat/source/f64_lt_quiet.c
     softfloat/source/f64_isSignalingNaN.c
     softfloat/source/extF80_to_ui32.c
     softfloat/source/extF80_to_ui64.c
     softfloat/source/extF80_to_i32.c
     softfloat/source/extF80_to_i64.c
     softfloat/source/extF80_to_ui32_r_minMag.c
     softfloat/source/extF80_to_ui64_r_minMag.c
     softfloat/source/extF80_to_i32_r_minMag.c
     softfloat/source/extF80_to_i64_r_minMag.c
     softfloat/source/extF80_to_f16.c
     softfloat/source/extF80_to_f32.c
     softfloat/source/extF80_to_f64.c
     softfloat/source/extF80_to_f128.c
     softfloat/source/extF80_roundToInt.c
     softfloat/source/extF80_add.c
     softfloat/source/extF80_sub.c
     softfloat/source/extF80_mul.c
     softfloat/source/extF80_div.c
     softfloat/source/extF80_rem.c
     softfloat/source/extF80_sqrt.c
     softfloat/source/extF80_eq.c
     softfloat/source/extF80_le.c
     softfloat/source/extF80_lt.c
     softfloat/source/extF80_eq_signaling.c
     softfloat/source/extF80_le_quiet.c
     softfloat/source/extF80_lt_quiet.c
     softfloat/source/extF80_isSignalingNaN.c
     softfloat/source/extF80M_to_ui32.c
     softfloat/source/extF80M_to_ui64.c
     softfloat/source/extF80M_to_i32.c
     softfloat/source/extF80M_to_i64.c
     softfloat/source/extF80M_to_ui32_r_minMag.c
     softfloat/source/extF80M_to_ui64_r_minMag.c
     softfloat/source/extF80M_to_i32_r_minMag.c
     softfloat/source/extF80M_to_i64_r_minMag.c
     softfloat/source/extF80M_to_f16.c
     softfloat/source/extF80M_to_f32.c
     softfloat/source/extF80M_to_f64.c
     softfloat/source/extF80M_to_f128M.c
     softfloat/source/extF80M_roundToInt.c
     softfloat/source/extF80M_add.c
     softfloat/source/extF80M_sub.c
     softfloat/source/extF80M_mul.c
     softfloat/source/extF80M_div.c
     softfloat/source/extF80M_rem.c
     softfloat/source/extF80M_sqrt.c
     softfloat/source/extF80M_eq.c
     softfloat/source/extF80M_le.c
     softfloat/source/extF80M_lt.c
     softfloat/source/extF80M_eq_signaling.c
     softfloat/source/extF80M_le_quiet.c
     softfloat/source/extF80M_lt_quiet.c
     softfloat/source/f128_to_ui32.c
     softfloat/source/f128_to_ui64.c
     softfloat/source/f128_to_i32.c
     softfloat/source/f128_to_i64.c
     softfloat/source/f128_to_ui32_r_minMag.c
     softfloat/source/f128_to_ui64_r_minMag.c
     softfloat/source/f128_to_i32_r_minMag.c
     softfloat/source/f128_to_i64_r_minMag.c
     softfloat/source/f128_to_f16.c
     softfloat/source/f128_to_f32.c
     softfloat/source/f128_to_extF80.c
     softfloat/source/f128_to_f64.c
     softfloat/source/f128_roundToInt.c
     softfloat/source/f128_add.c
     softfloat/source/f128_sub.c
     softfloat/source/f128_mul.c
     softfloat/source/f128_mulAdd.c
     softfloat/source/f128_div.c
     softfloat/source/f128_rem.c
     softfloat/source/f128_sqrt.c
     softfloat/source/f128_eq.c
     softfloat/source/f128_le.c
     softfloat/source/f128_lt.c
     softfloat/source/f128_eq_signaling.c
     softfloat/source/f128_le_quiet.c
     softfloat/source/f128_lt_quiet.c
     softfloat/source/f128_isSignalingNaN.c
     softfloat/source/f128M_to_ui32.c
     softfloat/source/f128M_to_ui64.c
     softfloat/source/f128M_to_i32.c
     softfloat/source/f128M_to_i64.c
     softfloat/source/f128M_to_ui32_r_minMag.c
     softfloat/source/f128M_to_ui64_r_minMag.c
     softfloat/source/f128M_to_i32_r_minMag.c
     softfloat/source/f128M_to_i64_r_minMag.c
     softfloat/source/f128M_to_f16.c
     softfloat/source/f128M_to_f32.c
     softfloat/source/f128M_to_extF80M.c
     softfloat/source/f128M_to_f64.c
     softfloat/source/f128M_roundToInt.c
     softfloat/source/f128M_add.c
     softfloat/source/f128M_sub.c
     softfloat/source/f128M_mul.c
     softfloat/source/f128M_mulAdd.c
     softfloat/source/f128M_div.c
     softfloat/source/f128M_rem.c
     softfloat/source/f128M_sqrt.c
     softfloat/source/f128M_eq.c
     softfloat/source/f128M_le.c
     softfloat/source/f128M_lt.c
     softfloat/source/f128M_eq_signaling.c
     softfloat/source/f128M_le_quiet.c
     softfloat/source/f128M_lt_quiet.c
   )

   file ( GLOB softfloat_headers "${CMAKE_CURRENT_SOURCE_DIR}/softfloat/source/include/*.h"
                                 "${CMAKE_CURRENT_SOURCE_DIR}/softfloat/build/Linux-x86_64-GCC/platform.h"
                                 "${CMAKE_CURRENT_SOURCE_DIR}/softfloat/source/8086-SSE/specialize.h" )
   list( APPEND softfloat_sources ${softfloat_headers} )

   add_library ( sf STATIC ${softfloat_sources} )
   target_include_directories( sf PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/softfloat/source/include" "${CMAKE_CURRENT_SOURCE_DIR}/softfloat/source/8086-SSE" "${CMAKE_CURRENT_SOURCE_DIR}/softfloat/build/Linux-x86_64-GCC" ${CMAKE_SOURCE_DIR})

   target_link_libraries( wasm_interpreter sf )
else()
   target_link_libraries( wasm_interpreter softfloat )
endif()

add_subdirectory(tests)
#add_subdirectory(tests/fuzz)
